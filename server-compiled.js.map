{"version":3,"sources":["server.js"],"names":[],"mappings":"AAAA;AACA,MAAM,QAAQ,QAAQ,OAAR,CAAd;AACA,MAAM,SAAS,MAAM,YAAN,CAAmB,MAAnB,CAAf;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;;AAEA,OAAO,EAAP,CAAU,OAAV,EAAkB,MAAI;AAClB,YAAQ,GAAR,CAAY,eAAZ;AACH,CAFD;;AAIA,OAAO,EAAP,CAAU,OAAV,EAAmB,GAAD,IAAO;AACrB,YAAQ,GAAR,CAAY,GAAZ;AACH,CAFD;AAGA,OAAO,EAAP,CAAU,WAAV,EAAsB,MAAI;AACtB,YAAQ,GAAR,CAAY,uBAAZ;AACH,CAFD;AAGA,OAAO,EAAP,CAAU,SAAV,EAAoB,CAAC,GAAD,EAAK,KAAL,KAAa;AAC7B,YAAQ,GAAR,CAAa,wBAAuB,MAAM,OAAQ,IAAG,MAAM,IAAK,IAAG,GAAI,EAAvE;AACA,QAAI,UAAU;AACV,kBAAU,WADA;AAEV,cAAM,IAFI;AAGV,cAAM,uBAHI;AAIV,gBAAQ,MAJE;AAKV,iBAAS;AACL,4BAAgB,MADX;AAEL,8BAAkB,OAAO,UAAP,CAAkB,GAAlB;AAFb;AALC,KAAd;;AAWA,QAAI,MAAM,KAAK,OAAL,CAAa,OAAb,EAAuB,GAAD,IAAS;AACrC,gBAAQ,GAAR,CAAa,WAAU,IAAI,UAAW,EAAtC;AACA,gBAAQ,GAAR,CAAa,YAAW,KAAK,SAAL,CAAe,IAAI,OAAnB,CAA4B,EAApD;AACA,YAAI,WAAJ,CAAgB,MAAhB;AACA,YAAI,EAAJ,CAAO,MAAP,EAAgB,KAAD,IAAW;AACtB,oBAAQ,GAAR,CAAa,SAAQ,KAAM,EAA3B;AACH,SAFD;AAGA,YAAI,EAAJ,CAAO,KAAP,EAAc,MAAM;AAChB,oBAAQ,GAAR,CAAY,2BAAZ;AACH,SAFD;AAGH,KAVS,CAAV;;AAYA,QAAI,EAAJ,CAAO,OAAP,EAAiB,CAAD,IAAO;AACnB,gBAAQ,GAAR,CAAa,yBAAwB,EAAE,OAAQ,EAA/C;AACH,KAFD;;AAIJ;AACI,QAAI,KAAJ,CAAU,GAAV;AACA,QAAI,GAAJ;;AAEA,QAAI,MAAM,KAAK,OAAL,CAAa,OAAb,EAAsB,UAAS,GAAT,EAAc;AAC1C,YAAI,WAAJ,CAAgB,MAAhB;AACA,YAAI,EAAJ,CAAO,MAAP,EAAe,UAAU,KAAV,EAAiB;AAC5B,oBAAQ,GAAR,CAAY,WAAW,KAAvB;AACH,SAFD;AAGA,YAAI,EAAJ,CAAO,KAAP,EAAa,UAAS,KAAT,EAAe;AACxB,oBAAQ,GAAR,CAAY,WAAW,KAAvB;AACH,SAFD;AAGH,KARS,CAAV;AASH,CA1CD;AA2CA,OAAO,IAAP,CAAY,IAAZ;AACA","file":"server-compiled.js","sourcesContent":["/*server*/\nconst dgram = require('dgram');\nconst server = dgram.createSocket('udp4');\nvar http = require('http');\n\nserver.on('close',()=>{\n    console.log('socket closed');\n});\n\nserver.on('error',(err)=>{\n    console.log(err);\n});\nserver.on('listening',()=>{\n    console.log('socket is listening..');\n});\nserver.on('message',(msg,rinfo)=>{\n    console.log(`receive message from ${rinfo.address}:${rinfo.port}ï¼š${msg}`);\n    var options = {\n        hostname: '127.0.0.1',\n        port: 9001,\n        path: '/gtw/rest/device/push',\n        method: 'POST',\n        headers: {\n            'Content-Type': 'text',\n            'Content-Length': Buffer.byteLength(msg)\n        }\n    };\n\n    var req = http.request(options, (res) => {\n        console.log(`STATUS: ${res.statusCode}`);\n        console.log(`HEADERS: ${JSON.stringify(res.headers)}`);\n        res.setEncoding('utf8');\n        res.on('data', (chunk) => {\n            console.log(`BODY: ${chunk}`);\n        });\n        res.on('end', () => {\n            console.log('No more data in response.');\n        });\n    });\n\n    req.on('error', (e) => {\n        console.log(`problem with request: ${e.message}`);\n    });\n\n// write data to request body\n    req.write(msg);\n    req.end();\n\n    var req = http.request(options, function(res) {\n        res.setEncoding('utf8');\n        res.on('data', function (chunk) {\n            console.log(\"body: \" + chunk);\n        });\n        res.on('end',function(chunk){\n            console.log(\"body: \" + chunk);\n        })\n    });\n});\nserver.bind(8061);\n/** nohup /zhanway/node/node-v9.3.0-linux-x64/bin/node /zhanway/server/smoke-server/server.js > /data/logs/smoke_logs/smoke.out 2>&1*/"]}